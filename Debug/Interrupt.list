
Interrupt.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000006b8  08000198  08000198  00001198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000850  08000850  00002010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000850  08000850  00002010  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  08000850  08000850  00002010  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  08000850  08000850  00002010  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000850  08000850  00001850  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000854  08000854  00001854  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000010  20000000  08000858  00002000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000010  08000868  00002010  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000030  08000868  00002030  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00002010  2**0
                  CONTENTS, READONLY
 12 .debug_info   00002336  00000000  00000000  00002040  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000009e2  00000000  00000000  00004376  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000348  00000000  00000000  00004d58  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000255  00000000  00000000  000050a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00014027  00000000  00000000  000052f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000356f  00000000  00000000  0001931c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0007f0ae  00000000  00000000  0001c88b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0009b939  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000b70  00000000  00000000  0009b97c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000070  00000000  00000000  0009c4ec  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000198 <__do_global_dtors_aux>:
 8000198:	b510      	push	{r4, lr}
 800019a:	4c05      	ldr	r4, [pc, #20]	@ (80001b0 <__do_global_dtors_aux+0x18>)
 800019c:	7823      	ldrb	r3, [r4, #0]
 800019e:	b933      	cbnz	r3, 80001ae <__do_global_dtors_aux+0x16>
 80001a0:	4b04      	ldr	r3, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x1c>)
 80001a2:	b113      	cbz	r3, 80001aa <__do_global_dtors_aux+0x12>
 80001a4:	4804      	ldr	r0, [pc, #16]	@ (80001b8 <__do_global_dtors_aux+0x20>)
 80001a6:	f3af 8000 	nop.w
 80001aa:	2301      	movs	r3, #1
 80001ac:	7023      	strb	r3, [r4, #0]
 80001ae:	bd10      	pop	{r4, pc}
 80001b0:	20000010 	.word	0x20000010
 80001b4:	00000000 	.word	0x00000000
 80001b8:	08000838 	.word	0x08000838

080001bc <frame_dummy>:
 80001bc:	b508      	push	{r3, lr}
 80001be:	4b03      	ldr	r3, [pc, #12]	@ (80001cc <frame_dummy+0x10>)
 80001c0:	b11b      	cbz	r3, 80001ca <frame_dummy+0xe>
 80001c2:	4903      	ldr	r1, [pc, #12]	@ (80001d0 <frame_dummy+0x14>)
 80001c4:	4803      	ldr	r0, [pc, #12]	@ (80001d4 <frame_dummy+0x18>)
 80001c6:	f3af 8000 	nop.w
 80001ca:	bd08      	pop	{r3, pc}
 80001cc:	00000000 	.word	0x00000000
 80001d0:	20000014 	.word	0x20000014
 80001d4:	08000838 	.word	0x08000838

080001d8 <LedInit>:
#define GPIOD_BASE_ADDR 0X40020C00

int cnt = 1000;

void LedInit()
{
 80001d8:	b480      	push	{r7}
 80001da:	b083      	sub	sp, #12
 80001dc:	af00      	add	r7, sp, #0
	__HAL_RCC_GPIOD_CLK_ENABLE();
 80001de:	2300      	movs	r3, #0
 80001e0:	603b      	str	r3, [r7, #0]
 80001e2:	4b10      	ldr	r3, [pc, #64]	@ (8000224 <LedInit+0x4c>)
 80001e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001e6:	4a0f      	ldr	r2, [pc, #60]	@ (8000224 <LedInit+0x4c>)
 80001e8:	f043 0308 	orr.w	r3, r3, #8
 80001ec:	6313      	str	r3, [r2, #48]	@ 0x30
 80001ee:	4b0d      	ldr	r3, [pc, #52]	@ (8000224 <LedInit+0x4c>)
 80001f0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80001f2:	f003 0308 	and.w	r3, r3, #8
 80001f6:	603b      	str	r3, [r7, #0]
 80001f8:	683b      	ldr	r3, [r7, #0]
	uint32_t* GPIOD_MODER= (uint32_t*)(GPIOD_BASE_ADDR + 0x00);
 80001fa:	4b0b      	ldr	r3, [pc, #44]	@ (8000228 <LedInit+0x50>)
 80001fc:	607b      	str	r3, [r7, #4]
	*GPIOD_MODER &= ~(0xff << 24);
 80001fe:	687b      	ldr	r3, [r7, #4]
 8000200:	681b      	ldr	r3, [r3, #0]
 8000202:	f023 427f 	bic.w	r2, r3, #4278190080	@ 0xff000000
 8000206:	687b      	ldr	r3, [r7, #4]
 8000208:	601a      	str	r2, [r3, #0]
	*GPIOD_MODER |= (0b01 << 24)| (0b01 << 26)|(0b01 << 28)|(0b01 << 30);
 800020a:	687b      	ldr	r3, [r7, #4]
 800020c:	681b      	ldr	r3, [r3, #0]
 800020e:	f043 42aa 	orr.w	r2, r3, #1426063360	@ 0x55000000
 8000212:	687b      	ldr	r3, [r7, #4]
 8000214:	601a      	str	r2, [r3, #0]
}
 8000216:	bf00      	nop
 8000218:	370c      	adds	r7, #12
 800021a:	46bd      	mov	sp, r7
 800021c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000220:	4770      	bx	lr
 8000222:	bf00      	nop
 8000224:	40023800 	.word	0x40023800
 8000228:	40020c00 	.word	0x40020c00

0800022c <ButtonInit>:

void ButtonInit()
{
 800022c:	b480      	push	{r7}
 800022e:	b083      	sub	sp, #12
 8000230:	af00      	add	r7, sp, #0
	__HAL_RCC_GPIOA_CLK_ENABLE();
 8000232:	2300      	movs	r3, #0
 8000234:	603b      	str	r3, [r7, #0]
 8000236:	4b0d      	ldr	r3, [pc, #52]	@ (800026c <ButtonInit+0x40>)
 8000238:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800023a:	4a0c      	ldr	r2, [pc, #48]	@ (800026c <ButtonInit+0x40>)
 800023c:	f043 0301 	orr.w	r3, r3, #1
 8000240:	6313      	str	r3, [r2, #48]	@ 0x30
 8000242:	4b0a      	ldr	r3, [pc, #40]	@ (800026c <ButtonInit+0x40>)
 8000244:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000246:	f003 0301 	and.w	r3, r3, #1
 800024a:	603b      	str	r3, [r7, #0]
 800024c:	683b      	ldr	r3, [r7, #0]
	uint32_t* GPIOA_MODER= (uint32_t*)(GPIOA_BASE_ADDR + 0x00);
 800024e:	4b08      	ldr	r3, [pc, #32]	@ (8000270 <ButtonInit+0x44>)
 8000250:	607b      	str	r3, [r7, #4]
	*GPIOA_MODER &= ~(0b11<<0);
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	681b      	ldr	r3, [r3, #0]
 8000256:	f023 0203 	bic.w	r2, r3, #3
 800025a:	687b      	ldr	r3, [r7, #4]
 800025c:	601a      	str	r2, [r3, #0]
}
 800025e:	bf00      	nop
 8000260:	370c      	adds	r7, #12
 8000262:	46bd      	mov	sp, r7
 8000264:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000268:	4770      	bx	lr
 800026a:	bf00      	nop
 800026c:	40023800 	.word	0x40023800
 8000270:	40020000 	.word	0x40020000

08000274 <LedCtrl>:
	LED_RED,
	LED_BLUE
}LED_t;

void LedCtrl(LED_t led, int on_off)
{
 8000274:	b480      	push	{r7}
 8000276:	b085      	sub	sp, #20
 8000278:	af00      	add	r7, sp, #0
 800027a:	4603      	mov	r3, r0
 800027c:	6039      	str	r1, [r7, #0]
 800027e:	71fb      	strb	r3, [r7, #7]
	else
	{
		*GPIOD_ODR &= ~(1<<led);
	}
#else
	uint32_t* GPIOD_BSRR = (uint32_t*)(GPIOD_BASE_ADDR + 0x18);
 8000280:	4b0f      	ldr	r3, [pc, #60]	@ (80002c0 <LedCtrl+0x4c>)
 8000282:	60fb      	str	r3, [r7, #12]
	if(on_off == 1)
 8000284:	683b      	ldr	r3, [r7, #0]
 8000286:	2b01      	cmp	r3, #1
 8000288:	d109      	bne.n	800029e <LedCtrl+0x2a>
	{
		*GPIOD_BSRR |= (1<<led);
 800028a:	68fb      	ldr	r3, [r7, #12]
 800028c:	681b      	ldr	r3, [r3, #0]
 800028e:	79fa      	ldrb	r2, [r7, #7]
 8000290:	2101      	movs	r1, #1
 8000292:	fa01 f202 	lsl.w	r2, r1, r2
 8000296:	431a      	orrs	r2, r3
 8000298:	68fb      	ldr	r3, [r7, #12]
 800029a:	601a      	str	r2, [r3, #0]
	else
	{
		*GPIOD_BSRR |= (1<<(led+16));
	}
#endif
}
 800029c:	e009      	b.n	80002b2 <LedCtrl+0x3e>
		*GPIOD_BSRR |= (1<<(led+16));
 800029e:	68fb      	ldr	r3, [r7, #12]
 80002a0:	681b      	ldr	r3, [r3, #0]
 80002a2:	79fa      	ldrb	r2, [r7, #7]
 80002a4:	3210      	adds	r2, #16
 80002a6:	2101      	movs	r1, #1
 80002a8:	fa01 f202 	lsl.w	r2, r1, r2
 80002ac:	431a      	orrs	r2, r3
 80002ae:	68fb      	ldr	r3, [r7, #12]
 80002b0:	601a      	str	r2, [r3, #0]
}
 80002b2:	bf00      	nop
 80002b4:	3714      	adds	r7, #20
 80002b6:	46bd      	mov	sp, r7
 80002b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002bc:	4770      	bx	lr
 80002be:	bf00      	nop
 80002c0:	40020c18 	.word	0x40020c18

080002c4 <ButtonState>:

char ButtonState()
{
 80002c4:	b480      	push	{r7}
 80002c6:	b083      	sub	sp, #12
 80002c8:	af00      	add	r7, sp, #0
	uint32_t* GPIOA_IDR = (uint32_t*)(GPIOA_BASE_ADDR + 0x10);
 80002ca:	4b07      	ldr	r3, [pc, #28]	@ (80002e8 <ButtonState+0x24>)
 80002cc:	607b      	str	r3, [r7, #4]
	return (*GPIOA_IDR >> 0) & 1;
 80002ce:	687b      	ldr	r3, [r7, #4]
 80002d0:	681b      	ldr	r3, [r3, #0]
 80002d2:	b2db      	uxtb	r3, r3
 80002d4:	f003 0301 	and.w	r3, r3, #1
 80002d8:	b2db      	uxtb	r3, r3
}
 80002da:	4618      	mov	r0, r3
 80002dc:	370c      	adds	r7, #12
 80002de:	46bd      	mov	sp, r7
 80002e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002e4:	4770      	bx	lr
 80002e6:	bf00      	nop
 80002e8:	40020010 	.word	0x40020010

080002ec <EXTI0Init>:
}

#define EXTI_BASE_ADDR	0x40013C00

void EXTI0Init()
{
 80002ec:	b480      	push	{r7}
 80002ee:	b085      	sub	sp, #20
 80002f0:	af00      	add	r7, sp, #0
			+ set trong thanh ghi EXTI_IMR
	- ARM (NVIC) phải chấp nhận interrupt signal từ EXTI gửi lên?
		+ bước 1: xác định EXTI0 nằm ở position bao nhiêu trong vector table? (mở vector table ở chapter "10: interrupts and events" trong reference manual) --> 6
		+ bước 2: enable interrupt cho position 6
	*/
	uint32_t* EXTI_RTSR = (uint32_t*)(EXTI_BASE_ADDR + 0x08);
 80002f2:	4b13      	ldr	r3, [pc, #76]	@ (8000340 <EXTI0Init+0x54>)
 80002f4:	60fb      	str	r3, [r7, #12]
	*EXTI_RTSR |= (1<<0);
 80002f6:	68fb      	ldr	r3, [r7, #12]
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	f043 0201 	orr.w	r2, r3, #1
 80002fe:	68fb      	ldr	r3, [r7, #12]
 8000300:	601a      	str	r2, [r3, #0]
	uint32_t* EXTI_FTSR = (uint32_t*)(EXTI_BASE_ADDR + 0x0C);
 8000302:	4b10      	ldr	r3, [pc, #64]	@ (8000344 <EXTI0Init+0x58>)
 8000304:	60bb      	str	r3, [r7, #8]
	*EXTI_FTSR |= (1<<0);
 8000306:	68bb      	ldr	r3, [r7, #8]
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	f043 0201 	orr.w	r2, r3, #1
 800030e:	68bb      	ldr	r3, [r7, #8]
 8000310:	601a      	str	r2, [r3, #0]
	uint32_t* EXTI_IMR = (uint32_t*)(EXTI_BASE_ADDR + 0x00);
 8000312:	4b0d      	ldr	r3, [pc, #52]	@ (8000348 <EXTI0Init+0x5c>)
 8000314:	607b      	str	r3, [r7, #4]
	*EXTI_IMR |= (1<<0);
 8000316:	687b      	ldr	r3, [r7, #4]
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	f043 0201 	orr.w	r2, r3, #1
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	601a      	str	r2, [r3, #0]

	uint32_t* NVIC_ISER0 = (uint32_t*)0xE000E100;
 8000322:	4b0a      	ldr	r3, [pc, #40]	@ (800034c <EXTI0Init+0x60>)
 8000324:	603b      	str	r3, [r7, #0]
	*NVIC_ISER0 |= 1<<6;
 8000326:	683b      	ldr	r3, [r7, #0]
 8000328:	681b      	ldr	r3, [r3, #0]
 800032a:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 800032e:	683b      	ldr	r3, [r7, #0]
 8000330:	601a      	str	r2, [r3, #0]
}
 8000332:	bf00      	nop
 8000334:	3714      	adds	r7, #20
 8000336:	46bd      	mov	sp, r7
 8000338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800033c:	4770      	bx	lr
 800033e:	bf00      	nop
 8000340:	40013c08 	.word	0x40013c08
 8000344:	40013c0c 	.word	0x40013c0c
 8000348:	40013c00 	.word	0x40013c00
 800034c:	e000e100 	.word	0xe000e100

08000350 <EXTI0_IRQHandler>:

void EXTI0_IRQHandler()
{
 8000350:	b580      	push	{r7, lr}
 8000352:	b082      	sub	sp, #8
 8000354:	af00      	add	r7, sp, #0
	if(ButtonState())
 8000356:	f7ff ffb5 	bl	80002c4 <ButtonState>
 800035a:	4603      	mov	r3, r0
 800035c:	2b00      	cmp	r3, #0
 800035e:	d004      	beq.n	800036a <EXTI0_IRQHandler+0x1a>
		LedCtrl(LED_RED, 1);
 8000360:	2101      	movs	r1, #1
 8000362:	200e      	movs	r0, #14
 8000364:	f7ff ff86 	bl	8000274 <LedCtrl>
 8000368:	e003      	b.n	8000372 <EXTI0_IRQHandler+0x22>
	else
		LedCtrl(LED_RED, 0);
 800036a:	2100      	movs	r1, #0
 800036c:	200e      	movs	r0, #14
 800036e:	f7ff ff81 	bl	8000274 <LedCtrl>

	//clear interrupt flag
	uint32_t* EXTI_PR = (uint32_t*)(EXTI_BASE_ADDR + 0x14);
 8000372:	4b06      	ldr	r3, [pc, #24]	@ (800038c <EXTI0_IRQHandler+0x3c>)
 8000374:	607b      	str	r3, [r7, #4]
	*EXTI_PR |= (1<<0);
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	681b      	ldr	r3, [r3, #0]
 800037a:	f043 0201 	orr.w	r2, r3, #1
 800037e:	687b      	ldr	r3, [r7, #4]
 8000380:	601a      	str	r2, [r3, #0]
}
 8000382:	bf00      	nop
 8000384:	3708      	adds	r7, #8
 8000386:	46bd      	mov	sp, r7
 8000388:	bd80      	pop	{r7, pc}
 800038a:	bf00      	nop
 800038c:	40013c14 	.word	0x40013c14

08000390 <main>:

int main()
{
 8000390:	b580      	push	{r7, lr}
 8000392:	af00      	add	r7, sp, #0
	HAL_Init();
 8000394:	f000 f8b0 	bl	80004f8 <HAL_Init>
	LedInit();
 8000398:	f7ff ff1e 	bl	80001d8 <LedInit>
	ButtonInit();
 800039c:	f7ff ff46 	bl	800022c <ButtonInit>
	EXTI0Init();
 80003a0:	f7ff ffa4 	bl	80002ec <EXTI0Init>

	while(1)
	{
		LedCtrl(LED_GREEN, 1);
 80003a4:	2101      	movs	r1, #1
 80003a6:	200c      	movs	r0, #12
 80003a8:	f7ff ff64 	bl	8000274 <LedCtrl>
		HAL_Delay(cnt);
 80003ac:	4b07      	ldr	r3, [pc, #28]	@ (80003cc <main+0x3c>)
 80003ae:	681b      	ldr	r3, [r3, #0]
 80003b0:	4618      	mov	r0, r3
 80003b2:	f000 f913 	bl	80005dc <HAL_Delay>
		LedCtrl(LED_GREEN, 0);
 80003b6:	2100      	movs	r1, #0
 80003b8:	200c      	movs	r0, #12
 80003ba:	f7ff ff5b 	bl	8000274 <LedCtrl>
		HAL_Delay(1000);
 80003be:	f44f 707a 	mov.w	r0, #1000	@ 0x3e8
 80003c2:	f000 f90b 	bl	80005dc <HAL_Delay>
		LedCtrl(LED_GREEN, 1);
 80003c6:	bf00      	nop
 80003c8:	e7ec      	b.n	80003a4 <main+0x14>
 80003ca:	bf00      	nop
 80003cc:	20000000 	.word	0x20000000

080003d0 <HAL_MspInit>:
 80003d0:	b480      	push	{r7}
 80003d2:	b083      	sub	sp, #12
 80003d4:	af00      	add	r7, sp, #0
 80003d6:	2300      	movs	r3, #0
 80003d8:	607b      	str	r3, [r7, #4]
 80003da:	4b10      	ldr	r3, [pc, #64]	@ (800041c <HAL_MspInit+0x4c>)
 80003dc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80003de:	4a0f      	ldr	r2, [pc, #60]	@ (800041c <HAL_MspInit+0x4c>)
 80003e0:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80003e4:	6453      	str	r3, [r2, #68]	@ 0x44
 80003e6:	4b0d      	ldr	r3, [pc, #52]	@ (800041c <HAL_MspInit+0x4c>)
 80003e8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80003ea:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 80003ee:	607b      	str	r3, [r7, #4]
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	2300      	movs	r3, #0
 80003f4:	603b      	str	r3, [r7, #0]
 80003f6:	4b09      	ldr	r3, [pc, #36]	@ (800041c <HAL_MspInit+0x4c>)
 80003f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80003fa:	4a08      	ldr	r2, [pc, #32]	@ (800041c <HAL_MspInit+0x4c>)
 80003fc:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8000400:	6413      	str	r3, [r2, #64]	@ 0x40
 8000402:	4b06      	ldr	r3, [pc, #24]	@ (800041c <HAL_MspInit+0x4c>)
 8000404:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000406:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800040a:	603b      	str	r3, [r7, #0]
 800040c:	683b      	ldr	r3, [r7, #0]
 800040e:	bf00      	nop
 8000410:	370c      	adds	r7, #12
 8000412:	46bd      	mov	sp, r7
 8000414:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000418:	4770      	bx	lr
 800041a:	bf00      	nop
 800041c:	40023800 	.word	0x40023800

08000420 <NMI_Handler>:
 8000420:	b480      	push	{r7}
 8000422:	af00      	add	r7, sp, #0
 8000424:	bf00      	nop
 8000426:	e7fd      	b.n	8000424 <NMI_Handler+0x4>

08000428 <HardFault_Handler>:
 8000428:	b480      	push	{r7}
 800042a:	af00      	add	r7, sp, #0
 800042c:	bf00      	nop
 800042e:	e7fd      	b.n	800042c <HardFault_Handler+0x4>

08000430 <MemManage_Handler>:
 8000430:	b480      	push	{r7}
 8000432:	af00      	add	r7, sp, #0
 8000434:	bf00      	nop
 8000436:	e7fd      	b.n	8000434 <MemManage_Handler+0x4>

08000438 <BusFault_Handler>:
 8000438:	b480      	push	{r7}
 800043a:	af00      	add	r7, sp, #0
 800043c:	bf00      	nop
 800043e:	e7fd      	b.n	800043c <BusFault_Handler+0x4>

08000440 <UsageFault_Handler>:
 8000440:	b480      	push	{r7}
 8000442:	af00      	add	r7, sp, #0
 8000444:	bf00      	nop
 8000446:	e7fd      	b.n	8000444 <UsageFault_Handler+0x4>

08000448 <SVC_Handler>:
 8000448:	b480      	push	{r7}
 800044a:	af00      	add	r7, sp, #0
 800044c:	bf00      	nop
 800044e:	46bd      	mov	sp, r7
 8000450:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000454:	4770      	bx	lr

08000456 <DebugMon_Handler>:
 8000456:	b480      	push	{r7}
 8000458:	af00      	add	r7, sp, #0
 800045a:	bf00      	nop
 800045c:	46bd      	mov	sp, r7
 800045e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000462:	4770      	bx	lr

08000464 <PendSV_Handler>:
 8000464:	b480      	push	{r7}
 8000466:	af00      	add	r7, sp, #0
 8000468:	bf00      	nop
 800046a:	46bd      	mov	sp, r7
 800046c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000470:	4770      	bx	lr

08000472 <SysTick_Handler>:
 8000472:	b580      	push	{r7, lr}
 8000474:	af00      	add	r7, sp, #0
 8000476:	f000 f891 	bl	800059c <HAL_IncTick>
 800047a:	bf00      	nop
 800047c:	bd80      	pop	{r7, pc}
	...

08000480 <SystemInit>:
 8000480:	b480      	push	{r7}
 8000482:	af00      	add	r7, sp, #0
 8000484:	4b06      	ldr	r3, [pc, #24]	@ (80004a0 <SystemInit+0x20>)
 8000486:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800048a:	4a05      	ldr	r2, [pc, #20]	@ (80004a0 <SystemInit+0x20>)
 800048c:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8000490:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8000494:	bf00      	nop
 8000496:	46bd      	mov	sp, r7
 8000498:	f85d 7b04 	ldr.w	r7, [sp], #4
 800049c:	4770      	bx	lr
 800049e:	bf00      	nop
 80004a0:	e000ed00 	.word	0xe000ed00

080004a4 <Reset_Handler>:
 80004a4:	f8df d034 	ldr.w	sp, [pc, #52]	@ 80004dc <LoopFillZerobss+0xe>
 80004a8:	f7ff ffea 	bl	8000480 <SystemInit>
 80004ac:	480c      	ldr	r0, [pc, #48]	@ (80004e0 <LoopFillZerobss+0x12>)
 80004ae:	490d      	ldr	r1, [pc, #52]	@ (80004e4 <LoopFillZerobss+0x16>)
 80004b0:	4a0d      	ldr	r2, [pc, #52]	@ (80004e8 <LoopFillZerobss+0x1a>)
 80004b2:	2300      	movs	r3, #0
 80004b4:	e002      	b.n	80004bc <LoopCopyDataInit>

080004b6 <CopyDataInit>:
 80004b6:	58d4      	ldr	r4, [r2, r3]
 80004b8:	50c4      	str	r4, [r0, r3]
 80004ba:	3304      	adds	r3, #4

080004bc <LoopCopyDataInit>:
 80004bc:	18c4      	adds	r4, r0, r3
 80004be:	428c      	cmp	r4, r1
 80004c0:	d3f9      	bcc.n	80004b6 <CopyDataInit>
 80004c2:	4a0a      	ldr	r2, [pc, #40]	@ (80004ec <LoopFillZerobss+0x1e>)
 80004c4:	4c0a      	ldr	r4, [pc, #40]	@ (80004f0 <LoopFillZerobss+0x22>)
 80004c6:	2300      	movs	r3, #0
 80004c8:	e001      	b.n	80004ce <LoopFillZerobss>

080004ca <FillZerobss>:
 80004ca:	6013      	str	r3, [r2, #0]
 80004cc:	3204      	adds	r2, #4

080004ce <LoopFillZerobss>:
 80004ce:	42a2      	cmp	r2, r4
 80004d0:	d3fb      	bcc.n	80004ca <FillZerobss>
 80004d2:	f000 f98d 	bl	80007f0 <__libc_init_array>
 80004d6:	f7ff ff5b 	bl	8000390 <main>
 80004da:	4770      	bx	lr
 80004dc:	20020000 	.word	0x20020000
 80004e0:	20000000 	.word	0x20000000
 80004e4:	20000010 	.word	0x20000010
 80004e8:	08000858 	.word	0x08000858
 80004ec:	20000010 	.word	0x20000010
 80004f0:	20000030 	.word	0x20000030

080004f4 <ADC_IRQHandler>:
 80004f4:	e7fe      	b.n	80004f4 <ADC_IRQHandler>
	...

080004f8 <HAL_Init>:
 80004f8:	b580      	push	{r7, lr}
 80004fa:	af00      	add	r7, sp, #0
 80004fc:	4b0e      	ldr	r3, [pc, #56]	@ (8000538 <HAL_Init+0x40>)
 80004fe:	681b      	ldr	r3, [r3, #0]
 8000500:	4a0d      	ldr	r2, [pc, #52]	@ (8000538 <HAL_Init+0x40>)
 8000502:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000506:	6013      	str	r3, [r2, #0]
 8000508:	4b0b      	ldr	r3, [pc, #44]	@ (8000538 <HAL_Init+0x40>)
 800050a:	681b      	ldr	r3, [r3, #0]
 800050c:	4a0a      	ldr	r2, [pc, #40]	@ (8000538 <HAL_Init+0x40>)
 800050e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000512:	6013      	str	r3, [r2, #0]
 8000514:	4b08      	ldr	r3, [pc, #32]	@ (8000538 <HAL_Init+0x40>)
 8000516:	681b      	ldr	r3, [r3, #0]
 8000518:	4a07      	ldr	r2, [pc, #28]	@ (8000538 <HAL_Init+0x40>)
 800051a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800051e:	6013      	str	r3, [r2, #0]
 8000520:	2003      	movs	r0, #3
 8000522:	f000 f931 	bl	8000788 <HAL_NVIC_SetPriorityGrouping>
 8000526:	200f      	movs	r0, #15
 8000528:	f000 f808 	bl	800053c <HAL_InitTick>
 800052c:	f7ff ff50 	bl	80003d0 <HAL_MspInit>
 8000530:	2300      	movs	r3, #0
 8000532:	4618      	mov	r0, r3
 8000534:	bd80      	pop	{r7, pc}
 8000536:	bf00      	nop
 8000538:	40023c00 	.word	0x40023c00

0800053c <HAL_InitTick>:
 800053c:	b580      	push	{r7, lr}
 800053e:	b082      	sub	sp, #8
 8000540:	af00      	add	r7, sp, #0
 8000542:	6078      	str	r0, [r7, #4]
 8000544:	4b12      	ldr	r3, [pc, #72]	@ (8000590 <HAL_InitTick+0x54>)
 8000546:	681a      	ldr	r2, [r3, #0]
 8000548:	4b12      	ldr	r3, [pc, #72]	@ (8000594 <HAL_InitTick+0x58>)
 800054a:	781b      	ldrb	r3, [r3, #0]
 800054c:	4619      	mov	r1, r3
 800054e:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8000552:	fbb3 f3f1 	udiv	r3, r3, r1
 8000556:	fbb2 f3f3 	udiv	r3, r2, r3
 800055a:	4618      	mov	r0, r3
 800055c:	f000 f93b 	bl	80007d6 <HAL_SYSTICK_Config>
 8000560:	4603      	mov	r3, r0
 8000562:	2b00      	cmp	r3, #0
 8000564:	d001      	beq.n	800056a <HAL_InitTick+0x2e>
 8000566:	2301      	movs	r3, #1
 8000568:	e00e      	b.n	8000588 <HAL_InitTick+0x4c>
 800056a:	687b      	ldr	r3, [r7, #4]
 800056c:	2b0f      	cmp	r3, #15
 800056e:	d80a      	bhi.n	8000586 <HAL_InitTick+0x4a>
 8000570:	2200      	movs	r2, #0
 8000572:	6879      	ldr	r1, [r7, #4]
 8000574:	f04f 30ff 	mov.w	r0, #4294967295
 8000578:	f000 f911 	bl	800079e <HAL_NVIC_SetPriority>
 800057c:	4a06      	ldr	r2, [pc, #24]	@ (8000598 <HAL_InitTick+0x5c>)
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	6013      	str	r3, [r2, #0]
 8000582:	2300      	movs	r3, #0
 8000584:	e000      	b.n	8000588 <HAL_InitTick+0x4c>
 8000586:	2301      	movs	r3, #1
 8000588:	4618      	mov	r0, r3
 800058a:	3708      	adds	r7, #8
 800058c:	46bd      	mov	sp, r7
 800058e:	bd80      	pop	{r7, pc}
 8000590:	20000004 	.word	0x20000004
 8000594:	2000000c 	.word	0x2000000c
 8000598:	20000008 	.word	0x20000008

0800059c <HAL_IncTick>:
 800059c:	b480      	push	{r7}
 800059e:	af00      	add	r7, sp, #0
 80005a0:	4b06      	ldr	r3, [pc, #24]	@ (80005bc <HAL_IncTick+0x20>)
 80005a2:	781b      	ldrb	r3, [r3, #0]
 80005a4:	461a      	mov	r2, r3
 80005a6:	4b06      	ldr	r3, [pc, #24]	@ (80005c0 <HAL_IncTick+0x24>)
 80005a8:	681b      	ldr	r3, [r3, #0]
 80005aa:	4413      	add	r3, r2
 80005ac:	4a04      	ldr	r2, [pc, #16]	@ (80005c0 <HAL_IncTick+0x24>)
 80005ae:	6013      	str	r3, [r2, #0]
 80005b0:	bf00      	nop
 80005b2:	46bd      	mov	sp, r7
 80005b4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005b8:	4770      	bx	lr
 80005ba:	bf00      	nop
 80005bc:	2000000c 	.word	0x2000000c
 80005c0:	2000002c 	.word	0x2000002c

080005c4 <HAL_GetTick>:
 80005c4:	b480      	push	{r7}
 80005c6:	af00      	add	r7, sp, #0
 80005c8:	4b03      	ldr	r3, [pc, #12]	@ (80005d8 <HAL_GetTick+0x14>)
 80005ca:	681b      	ldr	r3, [r3, #0]
 80005cc:	4618      	mov	r0, r3
 80005ce:	46bd      	mov	sp, r7
 80005d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80005d4:	4770      	bx	lr
 80005d6:	bf00      	nop
 80005d8:	2000002c 	.word	0x2000002c

080005dc <HAL_Delay>:
 80005dc:	b580      	push	{r7, lr}
 80005de:	b084      	sub	sp, #16
 80005e0:	af00      	add	r7, sp, #0
 80005e2:	6078      	str	r0, [r7, #4]
 80005e4:	f7ff ffee 	bl	80005c4 <HAL_GetTick>
 80005e8:	60b8      	str	r0, [r7, #8]
 80005ea:	687b      	ldr	r3, [r7, #4]
 80005ec:	60fb      	str	r3, [r7, #12]
 80005ee:	68fb      	ldr	r3, [r7, #12]
 80005f0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80005f4:	d005      	beq.n	8000602 <HAL_Delay+0x26>
 80005f6:	4b0a      	ldr	r3, [pc, #40]	@ (8000620 <HAL_Delay+0x44>)
 80005f8:	781b      	ldrb	r3, [r3, #0]
 80005fa:	461a      	mov	r2, r3
 80005fc:	68fb      	ldr	r3, [r7, #12]
 80005fe:	4413      	add	r3, r2
 8000600:	60fb      	str	r3, [r7, #12]
 8000602:	bf00      	nop
 8000604:	f7ff ffde 	bl	80005c4 <HAL_GetTick>
 8000608:	4602      	mov	r2, r0
 800060a:	68bb      	ldr	r3, [r7, #8]
 800060c:	1ad3      	subs	r3, r2, r3
 800060e:	68fa      	ldr	r2, [r7, #12]
 8000610:	429a      	cmp	r2, r3
 8000612:	d8f7      	bhi.n	8000604 <HAL_Delay+0x28>
 8000614:	bf00      	nop
 8000616:	bf00      	nop
 8000618:	3710      	adds	r7, #16
 800061a:	46bd      	mov	sp, r7
 800061c:	bd80      	pop	{r7, pc}
 800061e:	bf00      	nop
 8000620:	2000000c 	.word	0x2000000c

08000624 <__NVIC_SetPriorityGrouping>:
 8000624:	b480      	push	{r7}
 8000626:	b085      	sub	sp, #20
 8000628:	af00      	add	r7, sp, #0
 800062a:	6078      	str	r0, [r7, #4]
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	f003 0307 	and.w	r3, r3, #7
 8000632:	60fb      	str	r3, [r7, #12]
 8000634:	4b0c      	ldr	r3, [pc, #48]	@ (8000668 <__NVIC_SetPriorityGrouping+0x44>)
 8000636:	68db      	ldr	r3, [r3, #12]
 8000638:	60bb      	str	r3, [r7, #8]
 800063a:	68ba      	ldr	r2, [r7, #8]
 800063c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8000640:	4013      	ands	r3, r2
 8000642:	60bb      	str	r3, [r7, #8]
 8000644:	68fb      	ldr	r3, [r7, #12]
 8000646:	021a      	lsls	r2, r3, #8
 8000648:	68bb      	ldr	r3, [r7, #8]
 800064a:	4313      	orrs	r3, r2
 800064c:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8000650:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000654:	60bb      	str	r3, [r7, #8]
 8000656:	4a04      	ldr	r2, [pc, #16]	@ (8000668 <__NVIC_SetPriorityGrouping+0x44>)
 8000658:	68bb      	ldr	r3, [r7, #8]
 800065a:	60d3      	str	r3, [r2, #12]
 800065c:	bf00      	nop
 800065e:	3714      	adds	r7, #20
 8000660:	46bd      	mov	sp, r7
 8000662:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000666:	4770      	bx	lr
 8000668:	e000ed00 	.word	0xe000ed00

0800066c <__NVIC_GetPriorityGrouping>:
 800066c:	b480      	push	{r7}
 800066e:	af00      	add	r7, sp, #0
 8000670:	4b04      	ldr	r3, [pc, #16]	@ (8000684 <__NVIC_GetPriorityGrouping+0x18>)
 8000672:	68db      	ldr	r3, [r3, #12]
 8000674:	0a1b      	lsrs	r3, r3, #8
 8000676:	f003 0307 	and.w	r3, r3, #7
 800067a:	4618      	mov	r0, r3
 800067c:	46bd      	mov	sp, r7
 800067e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000682:	4770      	bx	lr
 8000684:	e000ed00 	.word	0xe000ed00

08000688 <__NVIC_SetPriority>:
 8000688:	b480      	push	{r7}
 800068a:	b083      	sub	sp, #12
 800068c:	af00      	add	r7, sp, #0
 800068e:	4603      	mov	r3, r0
 8000690:	6039      	str	r1, [r7, #0]
 8000692:	71fb      	strb	r3, [r7, #7]
 8000694:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000698:	2b00      	cmp	r3, #0
 800069a:	db0a      	blt.n	80006b2 <__NVIC_SetPriority+0x2a>
 800069c:	683b      	ldr	r3, [r7, #0]
 800069e:	b2da      	uxtb	r2, r3
 80006a0:	490c      	ldr	r1, [pc, #48]	@ (80006d4 <__NVIC_SetPriority+0x4c>)
 80006a2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80006a6:	0112      	lsls	r2, r2, #4
 80006a8:	b2d2      	uxtb	r2, r2
 80006aa:	440b      	add	r3, r1
 80006ac:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80006b0:	e00a      	b.n	80006c8 <__NVIC_SetPriority+0x40>
 80006b2:	683b      	ldr	r3, [r7, #0]
 80006b4:	b2da      	uxtb	r2, r3
 80006b6:	4908      	ldr	r1, [pc, #32]	@ (80006d8 <__NVIC_SetPriority+0x50>)
 80006b8:	79fb      	ldrb	r3, [r7, #7]
 80006ba:	f003 030f 	and.w	r3, r3, #15
 80006be:	3b04      	subs	r3, #4
 80006c0:	0112      	lsls	r2, r2, #4
 80006c2:	b2d2      	uxtb	r2, r2
 80006c4:	440b      	add	r3, r1
 80006c6:	761a      	strb	r2, [r3, #24]
 80006c8:	bf00      	nop
 80006ca:	370c      	adds	r7, #12
 80006cc:	46bd      	mov	sp, r7
 80006ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 80006d2:	4770      	bx	lr
 80006d4:	e000e100 	.word	0xe000e100
 80006d8:	e000ed00 	.word	0xe000ed00

080006dc <NVIC_EncodePriority>:
 80006dc:	b480      	push	{r7}
 80006de:	b089      	sub	sp, #36	@ 0x24
 80006e0:	af00      	add	r7, sp, #0
 80006e2:	60f8      	str	r0, [r7, #12]
 80006e4:	60b9      	str	r1, [r7, #8]
 80006e6:	607a      	str	r2, [r7, #4]
 80006e8:	68fb      	ldr	r3, [r7, #12]
 80006ea:	f003 0307 	and.w	r3, r3, #7
 80006ee:	61fb      	str	r3, [r7, #28]
 80006f0:	69fb      	ldr	r3, [r7, #28]
 80006f2:	f1c3 0307 	rsb	r3, r3, #7
 80006f6:	2b04      	cmp	r3, #4
 80006f8:	bf28      	it	cs
 80006fa:	2304      	movcs	r3, #4
 80006fc:	61bb      	str	r3, [r7, #24]
 80006fe:	69fb      	ldr	r3, [r7, #28]
 8000700:	3304      	adds	r3, #4
 8000702:	2b06      	cmp	r3, #6
 8000704:	d902      	bls.n	800070c <NVIC_EncodePriority+0x30>
 8000706:	69fb      	ldr	r3, [r7, #28]
 8000708:	3b03      	subs	r3, #3
 800070a:	e000      	b.n	800070e <NVIC_EncodePriority+0x32>
 800070c:	2300      	movs	r3, #0
 800070e:	617b      	str	r3, [r7, #20]
 8000710:	f04f 32ff 	mov.w	r2, #4294967295
 8000714:	69bb      	ldr	r3, [r7, #24]
 8000716:	fa02 f303 	lsl.w	r3, r2, r3
 800071a:	43da      	mvns	r2, r3
 800071c:	68bb      	ldr	r3, [r7, #8]
 800071e:	401a      	ands	r2, r3
 8000720:	697b      	ldr	r3, [r7, #20]
 8000722:	409a      	lsls	r2, r3
 8000724:	f04f 31ff 	mov.w	r1, #4294967295
 8000728:	697b      	ldr	r3, [r7, #20]
 800072a:	fa01 f303 	lsl.w	r3, r1, r3
 800072e:	43d9      	mvns	r1, r3
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	400b      	ands	r3, r1
 8000734:	4313      	orrs	r3, r2
 8000736:	4618      	mov	r0, r3
 8000738:	3724      	adds	r7, #36	@ 0x24
 800073a:	46bd      	mov	sp, r7
 800073c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000740:	4770      	bx	lr
	...

08000744 <SysTick_Config>:
 8000744:	b580      	push	{r7, lr}
 8000746:	b082      	sub	sp, #8
 8000748:	af00      	add	r7, sp, #0
 800074a:	6078      	str	r0, [r7, #4]
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	3b01      	subs	r3, #1
 8000750:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8000754:	d301      	bcc.n	800075a <SysTick_Config+0x16>
 8000756:	2301      	movs	r3, #1
 8000758:	e00f      	b.n	800077a <SysTick_Config+0x36>
 800075a:	4a0a      	ldr	r2, [pc, #40]	@ (8000784 <SysTick_Config+0x40>)
 800075c:	687b      	ldr	r3, [r7, #4]
 800075e:	3b01      	subs	r3, #1
 8000760:	6053      	str	r3, [r2, #4]
 8000762:	210f      	movs	r1, #15
 8000764:	f04f 30ff 	mov.w	r0, #4294967295
 8000768:	f7ff ff8e 	bl	8000688 <__NVIC_SetPriority>
 800076c:	4b05      	ldr	r3, [pc, #20]	@ (8000784 <SysTick_Config+0x40>)
 800076e:	2200      	movs	r2, #0
 8000770:	609a      	str	r2, [r3, #8]
 8000772:	4b04      	ldr	r3, [pc, #16]	@ (8000784 <SysTick_Config+0x40>)
 8000774:	2207      	movs	r2, #7
 8000776:	601a      	str	r2, [r3, #0]
 8000778:	2300      	movs	r3, #0
 800077a:	4618      	mov	r0, r3
 800077c:	3708      	adds	r7, #8
 800077e:	46bd      	mov	sp, r7
 8000780:	bd80      	pop	{r7, pc}
 8000782:	bf00      	nop
 8000784:	e000e010 	.word	0xe000e010

08000788 <HAL_NVIC_SetPriorityGrouping>:
 8000788:	b580      	push	{r7, lr}
 800078a:	b082      	sub	sp, #8
 800078c:	af00      	add	r7, sp, #0
 800078e:	6078      	str	r0, [r7, #4]
 8000790:	6878      	ldr	r0, [r7, #4]
 8000792:	f7ff ff47 	bl	8000624 <__NVIC_SetPriorityGrouping>
 8000796:	bf00      	nop
 8000798:	3708      	adds	r7, #8
 800079a:	46bd      	mov	sp, r7
 800079c:	bd80      	pop	{r7, pc}

0800079e <HAL_NVIC_SetPriority>:
 800079e:	b580      	push	{r7, lr}
 80007a0:	b086      	sub	sp, #24
 80007a2:	af00      	add	r7, sp, #0
 80007a4:	4603      	mov	r3, r0
 80007a6:	60b9      	str	r1, [r7, #8]
 80007a8:	607a      	str	r2, [r7, #4]
 80007aa:	73fb      	strb	r3, [r7, #15]
 80007ac:	2300      	movs	r3, #0
 80007ae:	617b      	str	r3, [r7, #20]
 80007b0:	f7ff ff5c 	bl	800066c <__NVIC_GetPriorityGrouping>
 80007b4:	6178      	str	r0, [r7, #20]
 80007b6:	687a      	ldr	r2, [r7, #4]
 80007b8:	68b9      	ldr	r1, [r7, #8]
 80007ba:	6978      	ldr	r0, [r7, #20]
 80007bc:	f7ff ff8e 	bl	80006dc <NVIC_EncodePriority>
 80007c0:	4602      	mov	r2, r0
 80007c2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80007c6:	4611      	mov	r1, r2
 80007c8:	4618      	mov	r0, r3
 80007ca:	f7ff ff5d 	bl	8000688 <__NVIC_SetPriority>
 80007ce:	bf00      	nop
 80007d0:	3718      	adds	r7, #24
 80007d2:	46bd      	mov	sp, r7
 80007d4:	bd80      	pop	{r7, pc}

080007d6 <HAL_SYSTICK_Config>:
 80007d6:	b580      	push	{r7, lr}
 80007d8:	b082      	sub	sp, #8
 80007da:	af00      	add	r7, sp, #0
 80007dc:	6078      	str	r0, [r7, #4]
 80007de:	6878      	ldr	r0, [r7, #4]
 80007e0:	f7ff ffb0 	bl	8000744 <SysTick_Config>
 80007e4:	4603      	mov	r3, r0
 80007e6:	4618      	mov	r0, r3
 80007e8:	3708      	adds	r7, #8
 80007ea:	46bd      	mov	sp, r7
 80007ec:	bd80      	pop	{r7, pc}
	...

080007f0 <__libc_init_array>:
 80007f0:	b570      	push	{r4, r5, r6, lr}
 80007f2:	4d0d      	ldr	r5, [pc, #52]	@ (8000828 <__libc_init_array+0x38>)
 80007f4:	4c0d      	ldr	r4, [pc, #52]	@ (800082c <__libc_init_array+0x3c>)
 80007f6:	1b64      	subs	r4, r4, r5
 80007f8:	10a4      	asrs	r4, r4, #2
 80007fa:	2600      	movs	r6, #0
 80007fc:	42a6      	cmp	r6, r4
 80007fe:	d109      	bne.n	8000814 <__libc_init_array+0x24>
 8000800:	4d0b      	ldr	r5, [pc, #44]	@ (8000830 <__libc_init_array+0x40>)
 8000802:	4c0c      	ldr	r4, [pc, #48]	@ (8000834 <__libc_init_array+0x44>)
 8000804:	f000 f818 	bl	8000838 <_init>
 8000808:	1b64      	subs	r4, r4, r5
 800080a:	10a4      	asrs	r4, r4, #2
 800080c:	2600      	movs	r6, #0
 800080e:	42a6      	cmp	r6, r4
 8000810:	d105      	bne.n	800081e <__libc_init_array+0x2e>
 8000812:	bd70      	pop	{r4, r5, r6, pc}
 8000814:	f855 3b04 	ldr.w	r3, [r5], #4
 8000818:	4798      	blx	r3
 800081a:	3601      	adds	r6, #1
 800081c:	e7ee      	b.n	80007fc <__libc_init_array+0xc>
 800081e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000822:	4798      	blx	r3
 8000824:	3601      	adds	r6, #1
 8000826:	e7f2      	b.n	800080e <__libc_init_array+0x1e>
 8000828:	08000850 	.word	0x08000850
 800082c:	08000850 	.word	0x08000850
 8000830:	08000850 	.word	0x08000850
 8000834:	08000854 	.word	0x08000854

08000838 <_init>:
 8000838:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800083a:	bf00      	nop
 800083c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800083e:	bc08      	pop	{r3}
 8000840:	469e      	mov	lr, r3
 8000842:	4770      	bx	lr

08000844 <_fini>:
 8000844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000846:	bf00      	nop
 8000848:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800084a:	bc08      	pop	{r3}
 800084c:	469e      	mov	lr, r3
 800084e:	4770      	bx	lr
